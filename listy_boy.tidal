--Initial Drums
-- distribute one note per cycle over a pattern
do
    resetCycles
    let mylist = [17,21,24,21,17,10,12]
    --let mylist = [6,50, 100, 30]
    let l = pure (length mylist)
    let pat1 = segment 1 $ (mylist !!) <$> (mod (sig floor) (l))
    d6 $  n "[x*2][x][~ x*2][~x]" # note pat1 # sound "jazz" 

-- distribute different notes over a pattern
do
  resetCycles
  let mylist = [17,21,24,21,17,10,12]
  let pat2 = fastcat $ map pure mylist
  return pat2
  -- call d7 in pop seq
  d7 $  n "x1 x2 x3 x4" # note pat2 # s "super808"
   # room ( segment 8 $ range 0 0.5 $ sine) 
   # sz ( segment 8 $ range 0 0.5 $ sine)




--Sax 
d1 $ n "<[0 1*4] [0 7 1] 5>" # sound "sax" # room ( segment 8 $ range 0 0.5 $ sine)  # sz 0.9 # octave 7 # gain 0.75

d2 $ n "<[0 1*4] [0 7 1] 5>" # sound "sax" # room ( segment 8 $ range 0 0.25 $ sine)  # sz 0.9 # octave 4 # gain 0.75

--Piano
d3 $ note ( segment 8 $ range 10 24 $ sine) # sound "superpiano" # room 2 # sz 0.7 # gain 0.75

d4 $ jux rev $ n ( segment  8 $ range 24 10 $ sine) # sound "superpiano" # room 2 # sz 0.7# gain 0.75

--Final Drums 
d5 $ n " 0 1 3 [4*2]" # sound "808"# room 2 # sz 0.7

hush

--Initialize each line below

let mylist = [17,21,24,21,17,10,12];
let l = pure (length mylist);
let pat1 = segment 1 $ (mylist !!) <$> (mod (sig floor) (l));
let pat2 = fastcat $ map pure mylist;
let endcycle = 36;

(do{
    --resetCycles;
    -- Drums 1
    d1 $ qtrigger $ seqP [
        (0, endcycle, n "[x*2][x][~ x*2][~x]" # note pat1 # sound "jazz"),  
        (2, endcycle, n "x1 x2 x3 x4" # note pat2 # s "super808" 
        # room ( segment 8 $ range 0 0.5 $ sine) # sz ( segment 8 $ range 0 0.5 $ sine))];
    -- Saxes 
     d2  $ qtrigger $ seqP [
        (4,endcycle,n "<[0 1*4] [~ 7 1] 5>" # sound "sax" 
        # room ( segment 8 $ range 0 0.5 $ sine)  # sz 0.9 # octave 4),
        (7,endcycle,n "<[0 1*4] [0 7 1] 5>" # sound "sax" 
        # room ( segment 8 $ range 0 0.5 $ sine)  # sz 0.9 # octave 7)
    ] # gain 0.75; 
    -- Piano 
    d3 $ qtrigger $seqP[
        (12,endcycle,note ( segment 8 $ range 10 24 $ sine) 
        # sound "superpiano" # room 2 # sz 0.7 # gain 0.75),
        (16,endcycle,jux rev $ n ( segment  8 $ range 24 10 $ sine) 
        # sound "superpiano" # room 2 # sz 0.7# gain 0.75
        )];
    -- Final drums 
    d4 $ qtrigger $ seqP[
        (20, endcycle, n " 0 1 3 [4*2]" # sound "808"# room 2 # sz 0.7)
    ]
    })


hush